{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","userId","todo","usersFromServer","find","completed","title","TodoList","todos","map","App","useState","newItem","setNewItem","selectedUser","setSelectedUser","error","setError","todosFromServer","setTodos","action","method","onSubmit","e","preventDefault","trim","currentTodos","reduce","maxId","Math","max","parseInt","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4c3a8ba.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import usersFromServer from '../../api/users';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const user = getUser(todo.userId);\n\n  return (\n    <article data-id=\"1\" className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [newItem, setNewItem] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [error, setError] = useState('');\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer\n    .map(todo => ({\n      ...todo,\n      user: getUser(todo.userId),\n    })));\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (newItem.trim() === '') {\n      setError('Please enter a title');\n\n      return;\n    }\n\n    if (selectedUser === '') {\n      setError('Please choose a user');\n\n      return;\n    }\n\n    setError('');\n\n    setTodos(currentTodos => {\n      return [\n        ...currentTodos,\n        {\n          id: todos.reduce((maxId, todo) => Math.max(maxId, todo.id), 0) + 1,\n          title: newItem.trim(),\n          completed: false,\n          userId: parseInt(selectedUser, 10),\n        },\n      ];\n    });\n\n    setNewItem('');\n    setSelectedUser('');\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNewItem(e.target.value);\n    setError('');\n  };\n\n  const handleUserChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(e.target.value);\n    setError('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newItem}\n            onChange={handleTitleChange}\n          />\n          {error && !newItem && <span className=\"error\">{error}</span>}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;\n\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {error && !selectedUser\n            && <span className=\"error\">{error}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}